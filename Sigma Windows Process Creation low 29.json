{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/5163A000-5160-5160-5160-5163A0000129')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/5163A000-5160-5160-5160-5163A0000129')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2022-11-01-preview",
            "properties": {
                "displayName": "Sigma Windows Process Creation low 29",
                "description": "Sigma Windows Process Creation low 29",
                "severity": "low",
                "enabled": false,
                "query": "let q0=_Im_ProcessCreate\n| where (TargetProcessName endswith \"sdclt.exe\" and TargetProcessIntegrityLevel =~ \"High\")|extend RuleId=\"40f9af16-589d-4984-b78d-8c2aec023197\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_uac_bypass_sdclt.yml\"|extend RuleTitle=\"Potential UAC Bypass Via Sdclt.EXE\"|extend RuleDescription=\"A General detection for sdclt being spawned as an elevated process. This could be an indicator of sdclt being used for bypass UAC techniques.\";\nlet q1=_Im_ProcessCreate\n| where (TargetProcessFileDescription =~ \"VNCViewer\" or TargetProcessFileProduct =~ \"UltraVNC VNCViewer\" or TargetProcessFileCompany =~ \"UltraVNC\" or TargetProcessFilename =~ \"VNCViewer.exe\")|extend RuleId=\"145322e4-0fd3-486b-81ca-9addc75736d8\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_ultravnc.yml\"|extend RuleTitle=\"Use of UltraVNC Remote Access Software\"|extend RuleDescription=\"An adversary may use legitimate desktop support and remote access software,to establish an interactive command and control channel to target systems within networks\";\nlet q2=_Im_ProcessCreate\n| where ((TargetProcessName endswith \"\\\\VaultCmd.exe\" or TargetProcessFilename =~ \"VAULTCMD.EXE\") and TargetProcessCommandLine contains \"/listcreds:\")|extend RuleId=\"58f50261-c53b-4c88-bd12-1d71f12eda4c\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_vaultcmd_list_creds.yml\"|extend RuleTitle=\"Windows Credential Manager Access via VaultCmd\"|extend RuleDescription=\"List credentials currently stored in Windows Credential Manager via the native Windows utility vaultcmd.exe\";\nlet q3=_Im_ProcessCreate\n| where ((TargetProcessName endswith \"\\\\verclsid.exe\" or TargetProcessFilename =~ \"verclsid.exe\") and (TargetProcessCommandLine contains \"/S\" and TargetProcessCommandLine contains \"/C\"))|extend RuleId=\"d06be4b9-8045-428b-a567-740a26d9db25\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_verclsid_runs_com.yml\"|extend RuleTitle=\"Verclsid.exe Runs COM Object\"|extend RuleDescription=\"Detects when verclsid.exe is used to run COM object via GUID\";\nlet q4=_Im_ProcessCreate\n| where (TargetProcessName endswith \"\\\\VBoxDrvInst.exe\" and (TargetProcessCommandLine contains \"driver\" and TargetProcessCommandLine contains \"executeinf\"))|extend RuleId=\"b7b19cb6-9b32-4fc4-a108-73f19acfe262\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_virtualbox_vboxdrvinst_execution.yml\"|extend RuleTitle=\"Suspicious VBoxDrvInst.exe Parameters\"|extend RuleDescription=\"Detect VBoxDrvInst.exe run with parameters allowing processing INF file.\\nThis allows to create values in the registry and install drivers.\\nFor example one could use this technique to obtain persistence via modifying one of Run or RunOnce registry keys\\n\";\nlet q5=_Im_ProcessCreate\n| where ((TargetProcessName endswith \"\\\\VMwareToolBoxCmd.exe\" or TargetProcessFilename =~ \"toolbox-cmd.exe\") and (TargetProcessCommandLine contains \" script \" and TargetProcessCommandLine contains \" set \"))|extend RuleId=\"7aa4e81a-a65c-4e10-9f81-b200eb229d7d\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_vmware_toolbox_cmd_persistence.yml\"|extend RuleTitle=\"Potential Persistence Via VMwareToolBoxCmd.EXE VM State Change Script\"|extend RuleDescription=\"Detects execution of the \\\"VMwareToolBoxCmd.exe\\\" with the \\\"script\\\" and \\\"set\\\" flag to setup a specific script to run for a specific VM state\";\nlet q6=_Im_ProcessCreate\n| where (ActingProcessName endswith \"\\\\code.exe\" and ((TargetProcessName endswith \"\\\\calc.exe\" or TargetProcessName endswith \"\\\\regsvr32.exe\" or TargetProcessName endswith \"\\\\rundll32.exe\" or TargetProcessName endswith \"\\\\cscript.exe\" or TargetProcessName endswith \"\\\\wscript.exe\") or ((TargetProcessName endswith \"\\\\powershell.exe\" or TargetProcessName endswith \"\\\\pwsh.exe\" or TargetProcessName endswith \"\\\\cmd.exe\") and (TargetProcessCommandLine contains \"Invoke-Expressions\" or TargetProcessCommandLine contains \"IEX\" or TargetProcessCommandLine contains \"Invoke-Command\" or TargetProcessCommandLine contains \"ICM\" or TargetProcessCommandLine contains \"DownloadString\" or TargetProcessCommandLine contains \"rundll32\" or TargetProcessCommandLine contains \"regsvr32\" or TargetProcessCommandLine contains \"wscript\" or TargetProcessCommandLine contains \"cscript\")) or (TargetProcessName contains \":\\\\Users\\\\Public\\\\\" or TargetProcessName contains \":\\\\Windows\\\\Temp\\\\\" or TargetProcessName contains \":\\\\Temp\\\\\")))|extend RuleId=\"5a3164f2-b373-4152-93cf-090b13c12d27\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_vscode_child_processes_anomalies.yml\"|extend RuleTitle=\"Potentially Suspicious Child Process Of VsCode\"|extend RuleDescription=\"Detects uncommon or suspicious child processes spawning from a VsCode \\\"code.exe\\\" process. This could indicate an attempt of persistence via VsCode tasks or terminal profiles.\";\nlet q7=_Im_ProcessCreate\n| where ((isempty(TargetProcessFilename) and TargetProcessCommandLine endswith \".exe tunnel\") or (TargetProcessCommandLine contains \".exe tunnel\" and TargetProcessCommandLine contains \"--name \" and TargetProcessCommandLine contains \"--accept-server-license-terms\") or (ActingProcessCommandLine endswith \" tunnel\" and TargetProcessName endswith \"\\\\cmd.exe\" and (TargetProcessCommandLine contains \"/d /c \" and TargetProcessCommandLine contains \"\\\\servers\\\\Stable-\" and TargetProcessCommandLine contains \"code-server.cmd\")))|extend RuleId=\"90d6bd71-dffb-4989-8d86-a827fedd6624\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_vscode_tunnel_execution.yml\"|extend RuleTitle=\"Visual Studio Code Tunnel Execution\"|extend RuleDescription=\"Detects Visual Studio Code tunnel execution. Attackers can abuse this functionality to establish a C2 channel\";\nlet q8=_Im_ProcessCreate\n| where ((ActingProcessName contains \"\\\\servers\\\\Stable-\" and ActingProcessName endswith \"\\\\server\\\\node.exe\" and ActingProcessCommandLine contains \".vscode-server\") and (((TargetProcessName endswith \"\\\\powershell.exe\" or TargetProcessName endswith \"\\\\pwsh.exe\") and TargetProcessCommandLine contains \"\\\\terminal\\\\browser\\\\media\\\\shellIntegration.ps1\") or (TargetProcessName endswith \"\\\\wsl.exe\" or TargetProcessName endswith \"\\\\bash.exe\")))|extend RuleId=\"f4a623c2-4ef5-4c33-b811-0642f702c9f1\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_vscode_tunnel_remote_shell_.yml\"|extend RuleTitle=\"Visual Studio Code Tunnel Shell Execution\"|extend RuleDescription=\"Detects the execution of a shell (powershell, bash, wsl...) via Visual Studio Code tunnel. Attackers can abuse this functionality to establish a C2 channel and execute arbitrary commands on the system.\";\nlet q9=_Im_ProcessCreate\n| where (TargetProcessCommandLine contains \"tunnel \" and TargetProcessCommandLine contains \"service\" and TargetProcessCommandLine contains \"internal-run\" and TargetProcessCommandLine contains \"tunnel-service.log\")|extend RuleId=\"30bf1789-379d-4fdc-900f-55cd0a90a801\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_vscode_tunnel_service_install.yml\"|extend RuleTitle=\"Visual Studio Code Tunnel Service Installation\"|extend RuleDescription=\"Detects the installation of VsCode tunnel (code-tunnel) as a service.\";\nlet q10=_Im_ProcessCreate\n| where ((TargetProcessName endswith \"\\\\VSDiagnostics.exe\" or TargetProcessFilename =~ \"VSDiagnostics.exe\") and TargetProcessCommandLine contains \"start\" and (TargetProcessCommandLine contains \" /launch:\" or TargetProcessCommandLine contains \" -launch:\"))|extend RuleId=\"ac1c92b4-ac81-405a-9978-4604d78cc47e\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_vsdiagnostics_execution_proxy.yml\"|extend RuleTitle=\"Potential Binary Proxy Execution Via VSDiagnostics.EXE\"|extend RuleDescription=\"Detects execution of \\\"VSDiagnostics.exe\\\" with the \\\"start\\\" command in order to launch and proxy arbitrary binaries.\";\nlet q11=_Im_ProcessCreate\n| where ((TargetProcessName endswith \"\\\\vsls-agent.exe\" and TargetProcessCommandLine contains \"--agentExtensionPath\") and (not(TargetProcessCommandLine contains \"Microsoft.VisualStudio.LiveShare.Agent.\")))|extend RuleId=\"43103702-5886-11ed-9b6a-0242ac120002\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_vslsagent_agentextensionpath_load.yml\"|extend RuleTitle=\"Suspicious Vsls-Agent Command With AgentExtensionPath Load\"|extend RuleDescription=\"Detects Microsoft Visual Studio vsls-agent.exe lolbin execution with a suspicious library load using the --agentExtensionPath parameter\";\nlet q12=_Im_ProcessCreate\n| where (ActingProcessName endswith \"\\\\explorer.exe\" and (TargetProcessName endswith \"\\\\cmd.exe\" or TargetProcessName endswith \"\\\\cscript.exe\" or TargetProcessName endswith \"\\\\mshta.exe\" or TargetProcessName endswith \"\\\\powershell.exe\" or TargetProcessName endswith \"\\\\pwsh.exe\" or TargetProcessName endswith \"\\\\wscript.exe\") and TargetProcessCommandLine contains \"\\\\DavWWWRoot\\\\\")|extend RuleId=\"1412aa78-a24c-4abd-83df-767dfb2c5bbe\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_webdav_lnk_execution.yml\"|extend RuleTitle=\"Potentially Suspicious WebDAV LNK Execution\"|extend RuleDescription=\"Detects possible execution via LNK file accessed on a WebDAV server.\";\nlet q13=_Im_ProcessCreate\n| where ((TargetProcessName endswith \"\\\\WerFault.exe\" or TargetProcessFilename =~ \"WerFault.exe\") and TargetProcessCommandLine contains \" -pr \")|extend RuleId=\"fabfb3a7-3ce1-4445-9c7c-3c27f1051cdd\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_werfault_reflect_debugger_exec.yml\"|extend RuleTitle=\"Potential ReflectDebugger Content Execution Via WerFault.EXE\"|extend RuleDescription=\"Detects execution of \\\"WerFault.exe\\\" with the \\\"-pr\\\" commandline flag that is used to run files stored in the ReflectDebugger key which could be used to store the path to the malware in order to masquerade the execution flow\";\nlet q14=_Im_ProcessCreate\n| where TargetProcessCommandLine contains \" -all\"\n| where TargetProcessCommandLine contains \" /all\"\n| where ((TargetProcessName endswith \"\\\\whoami.exe\" or TargetProcessFilename =~ \"whoami.exe\") and ())|extend RuleId=\"c248c896-e412-4279-8c15-1c558067b6fa\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_whoami_all_execution.yml\"|extend RuleTitle=\"Enumerate All Information With Whoami.EXE\"|extend RuleDescription=\"Detects the execution of \\\"whoami.exe\\\" with the \\\"/all\\\" flag\";\nlet q15=_Im_ProcessCreate\n| where ((TargetProcessName endswith \"\\\\whoami.exe\" or TargetProcessFilename =~ \"whoami.exe\") and (TargetProcessCommandLine contains \" /groups\" or TargetProcessCommandLine contains \" -groups\"))|extend RuleId=\"bd8b828d-0dca-48e1-8a63-8a58ecf2644f\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_whoami_groups_discovery.yml\"|extend RuleTitle=\"Group Membership Reconnaissance Via Whoami.EXE\"|extend RuleDescription=\"Detects the execution of whoami.exe with the /group command line flag to show group membership for the current user, account type, security identifiers (SID), and attributes.\";\nlet q16=_Im_ProcessCreate\n| where (((TargetProcessName endswith \"\\\\whoami.exe\" or TargetProcessFilename =~ \"whoami.exe\") and (TargetProcessCommandLine contains \" /FO CSV\" or TargetProcessCommandLine contains \" -FO CSV\")) or TargetProcessCommandLine contains \"*whoami*>*\")|extend RuleId=\"c30fb093-1109-4dc8-88a8-b30d11c95a5d\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_whoami_output.yml\"|extend RuleTitle=\"Whoami.EXE Execution With Output Option\"|extend RuleDescription=\"Detects the execution of \\\"whoami.exe\\\" with the \\\"/FO\\\" flag to choose CSV as output format or with redirection options to export the results to a file for later use.\";\nlet q17=_Im_ProcessCreate\n| where ((TargetProcessName endswith \"\\\\whoami.exe\" or TargetProcessFilename =~ \"whoami.exe\") and (not(((ActingProcessName endswith \"\\\\cmd.exe\" or ActingProcessName endswith \"\\\\powershell_ise.exe\" or ActingProcessName endswith \"\\\\powershell.exe\" or ActingProcessName endswith \"\\\\pwsh.exe\") or isempty(ActingProcessName) or ActingProcessName =~ \"\"))) and (not(ActingProcessName endswith \":\\\\Program Files\\\\Microsoft Monitoring Agent\\\\Agent\\\\MonitoringHost.exe\")))|extend RuleId=\"8de1cbe8-d6f5-496d-8237-5f44a721c7a0\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_whoami_parent_anomaly.yml\"|extend RuleTitle=\"Whoami.EXE Execution Anomaly\"|extend RuleDescription=\"Detects the execution of whoami.exe with suspicious parent processes.\";\nunion q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17;",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "startTimeUtc": null,
                "tactics": ["DefenseEvasion", "CredentialAccess", "CommandAndControl", "Persistence", "PrivilegeEscalation", "Discovery", "Execution"],
                "techniques": ["T1036", "T1548", "T1219", "T1112", "T1071", "T1059", "T1033", "T1555", "T1202", "T1204", "T1218"],
                "alertRuleTemplateName": "5163A000-5160-5160-5160-5163A0000129",
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },                
                "alertDetailsOverride": {
                    "alertDisplayNameFormat": "{{RuleTitle}} ",
                    "alertDescriptionFormat": "{{RuleDescription}} ",
                    "alertDynamicProperties": [
                        {
                            "alertProperty": "ExtendedLinks",
                            "value": "SourceURL"
                        },
                        {
                            "alertProperty": "ProductComponentName",
                            "value": "RuleId"
                        }
                    ]
                },
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "ActorUsername"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Dvc"
                            }
                        ]
                    },
                    {
                        "entityType": "Process",
                        "fieldMappings": [
                            {
                                "identifier": "ProcessId",
                                "columnName": "TargetProcessId"
                            },
                            {
                                "identifier": "CommandLine",
                                "columnName": "TargetProcessCommandLine"
                            },
                            {
                                "identifier": "ElevationToken",
                                "columnName": "TargetProcessTokenElevation"
                            }
                        ]
                    },
                    {
                        "entityType": "FileHash",
                        "fieldMappings": [
                            {
                                "identifier": "Algorithm",
                                "columnName": "HashType"
                            },
                            {
                                "identifier": "Value",
                                "columnName": "Hash"
                            }
                        ]
                    },
                    {
                        "entityType": "File",
                        "fieldMappings": [
                            {
                                "identifier": "Directory",
                                "columnName": "TargetProcessCurrentDirectory"
                            },
                            {
                                "identifier": "Name",
                                "columnName": "TargetProcessName"
                            }
                        ]
                    },
                    {
                        "entityType": "Process",
                        "fieldMappings": [
                            {
                                "identifier": "ProcessId",
                                "columnName": "ActingProcessId"
                            },
                            {
                                "identifier": "CommandLine",
                                "columnName": "ActingProcessCommandLine"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null,
                "templateVersion": "1.0.0"
            }
        }
    ]
}