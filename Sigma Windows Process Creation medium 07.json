{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/5163A000-5160-5160-5160-5163A0000107')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/5163A000-5160-5160-5160-5163A0000107')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2022-11-01-preview",
            "properties": {
                "displayName": "Sigma Windows Process Creation low 07",
                "description": "Sigma Windows Process Creation low 07",
                "severity": "low",
                "enabled": false,
                "query": "let q0=_Im_ProcessCreate\n| where ((TargetProcessCommandLine contains \"findstr\" or TargetProcessName endswith \"findstr.exe\" or TargetProcessFilename =~ \"FINDSTR.EXE\") and (((TargetProcessCommandLine contains \" /v \" or TargetProcessCommandLine contains \" -v \") and (TargetProcessCommandLine contains \" /l \" or TargetProcessCommandLine contains \" -l \")) or ((TargetProcessCommandLine contains \" /s \" or TargetProcessCommandLine contains \" -s \") and (TargetProcessCommandLine contains \" /i \" or TargetProcessCommandLine contains \" -i \"))))|extend RuleId=\"bf6c39fc-e203-45b9-9538-05397c1b4f3f\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_findstr.yml\"|extend RuleTitle=\"Abusing Findstr for Defense Evasion\"|extend RuleDescription=\"Attackers can use findstr to hide their artifacts or search specific strings and evade defense mechanism\";\nlet q1=_Im_ProcessCreate\n| where ((TargetProcessName endswith \"\\\\forfiles.exe\" or TargetProcessFilename =~ \"forfiles.exe\") and (TargetProcessCommandLine contains \" /p \" or TargetProcessCommandLine contains \" -p \") and (TargetProcessCommandLine contains \" /m \" or TargetProcessCommandLine contains \" -m \") and (TargetProcessCommandLine contains \" /c \" or TargetProcessCommandLine contains \" -c \"))|extend RuleId=\"9aa5106d-bce3-4b13-86df-3a20f1d5cf0b\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_forfiles.yml\"|extend RuleTitle=\"Use of Forfiles For Execution\"|extend RuleDescription=\"Execute commands and binaries from the context of \\\"forfiles\\\". This is used as a LOLBIN for example to bypass application whitelisting.\";\nlet q2=_Im_ProcessCreate\n| where (TargetProcessName endswith \"\\\\fsianycpu.exe\" or TargetProcessFilename =~ \"fsianycpu.exe\" or TargetProcessName endswith \"\\\\fsi.exe\" or TargetProcessFilename =~ \"fsi.exe\")|extend RuleId=\"b96b2031-7c17-4473-afe7-a30ce714db29\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_fsharp_interpreters.yml\"|extend RuleTitle=\"Use of FSharp Interpreters\"|extend RuleDescription=\"The FSharp Interpreters, FsiAnyCpu.exe and FSi.exe, can be used for AWL bypass and is listed in Microsoft recommended block rules.\";\nlet q3=_Im_ProcessCreate\n| where (ActingProcessName endswith \"\\\\ftp.exe\" or ((TargetProcessName endswith \"\\\\ftp.exe\" or TargetProcessFilename =~ \"ftp.exe\") and (TargetProcessCommandLine contains \"-s:\" or TargetProcessCommandLine contains \"/s:\")))|extend RuleId=\"06b401f4-107c-4ff9-947f-9ec1e7649f1e\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_ftp.yml\"|extend RuleTitle=\"LOLBIN Execution Of The FTP.EXE Binary\"|extend RuleDescription=\"Detects execution of ftp.exe script execution with the \\\"-s\\\" or \\\"/s\\\" flag and any child processes ran by ftp.exe\";\nlet q4=_Im_ProcessCreate\n| where (((TargetProcessName endswith \"\\\\cscript.exe\" or TargetProcessName endswith \"\\\\wscript.exe\") or (TargetProcessFilename =~ \"cscript.exe\" or TargetProcessFilename =~ \"wscript.exe\")) and TargetProcessCommandLine contains \"gatherNetworkInfo.vbs\")|extend RuleId=\"575dce0c-8139-4e30-9295-1ee75969f7fe\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_gather_network_info.yml\"|extend RuleTitle=\"Potential Reconnaissance Activity Via GatherNetworkInfo.VBS\"|extend RuleDescription=\"Detects execution of the built-in script located in \\\"C:\\\\Windows\\\\System32\\\\gatherNetworkInfo.vbs\\\". Which can be used to gather information about the target machine\";\nlet q5=_Im_ProcessCreate\n| where (TargetProcessName endswith \"\\\\GfxDownloadWrapper.exe\" and (not((TargetProcessCommandLine contains \"gameplayapi.intel.com\" and (ActingProcessName endswith \"\\\\GfxDownloadWrapper.exe\" or ActingProcessName endswith \"\\\\igfxEM.exe\")))))|extend RuleId=\"eee00933-a761-4cd0-be70-c42fe91731e7\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_gfxdownloadwrapper_file_download.yml\"|extend RuleTitle=\"GfxDownloadWrapper.exe Downloads File from Suspicious URL\"|extend RuleDescription=\"Detects when GfxDownloadWrapper.exe downloads file from non standard URL\";\nlet q6=_Im_ProcessCreate\n| where (((TargetProcessName endswith \"\\\\gpscript.exe\" or TargetProcessFilename =~ \"GPSCRIPT.EXE\") and (TargetProcessCommandLine contains \" /logon\" or TargetProcessCommandLine contains \" /startup\")) and (not(ActingProcessCommandLine =~ \"C:\\\\windows\\\\system32\\\\svchost.exe -k netsvcs -p -s gpsvc\")))|extend RuleId=\"1e59c230-6670-45bf-83b0-98903780607e\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_gpscript.yml\"|extend RuleTitle=\"Gpscript Execution\"|extend RuleDescription=\"Detects the execution of the LOLBIN gpscript, which executes logon or startup scripts configured in Group Policy\";\nlet q7=_Im_ProcessCreate\n| where ((TargetProcessName endswith \"\\\\ie4uinit.exe\" or TargetProcessFilename =~ \"IE4UINIT.EXE\") and (not(((TargetProcessCurrentDirectory =~ \"c:\\\\windows\\\\system32\\\\\" or TargetProcessCurrentDirectory =~ \"c:\\\\windows\\\\sysWOW64\\\\\") or isnull(TargetProcessCurrentDirectory)))))|extend RuleId=\"d3bf399f-b0cf-4250-8bb4-dfc192ab81dc\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_ie4uinit.yml\"|extend RuleTitle=\"Ie4uinit Lolbin Use From Invalid Path\"|extend RuleDescription=\"Detect use of ie4uinit.exe to execute commands from a specially prepared ie4uinit.inf file from a directory other than the usual directories\";\nlet q8=_Im_ProcessCreate\n| where (TargetProcessName endswith \"\\\\ilasm.exe\" or TargetProcessFilename =~ \"ilasm.exe\")|extend RuleId=\"850d55f9-6eeb-4492-ad69-a72338f65ba4\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_ilasm.yml\"|extend RuleTitle=\"Ilasm Lolbin Use Compile C-Sharp\"|extend RuleDescription=\"Detect use of Ilasm.exe to compile c# code into dll or exe.\";\nlet q9=_Im_ProcessCreate\n| where ((TargetProcessName endswith \"\\\\InstallUtil.exe\" or TargetProcessFilename =~ \"InstallUtil.exe\") and (TargetProcessCommandLine contains \"http://\" or TargetProcessCommandLine contains \"https://\" or TargetProcessCommandLine contains \"ftp://\"))|extend RuleId=\"75edd216-1939-4c73-8d61-7f3a0d85b5cc\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_installutil_download.yml\"|extend RuleTitle=\"Suspicious Execution of InstallUtil To Download\"|extend RuleDescription=\"Detects the use the .NET InstallUtil.exe application in order to download arbitrary files. The files will be written to %LOCALAPPDATA%\\\\Microsoft\\\\Windows\\\\INetCache\\\\IE\\\\\";\nlet q10=_Im_ProcessCreate\n| where (TargetProcessName endswith \"\\\\jsc.exe\" and TargetProcessCommandLine contains \".js\")|extend RuleId=\"52788a70-f1da-40dd-8fbd-73b5865d6568\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_jsc.yml\"|extend RuleTitle=\"JSC Convert Javascript To Executable\"|extend RuleDescription=\"Detects the execution of the LOLBIN jsc.exe used by .NET to compile javascript code to .exe or .dll format\";\nlet q11=_Im_ProcessCreate\n| where (TargetProcessCommandLine contains \"Launch-VsDevShell.ps1\" and (TargetProcessCommandLine contains \"VsWherePath \" or TargetProcessCommandLine contains \"VsInstallationPath \"))|extend RuleId=\"45d3a03d-f441-458c-8883-df101a3bb146\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_launch_vsdevshell.yml\"|extend RuleTitle=\"Launch-VsDevShell.PS1 Proxy Execution\"|extend RuleDescription=\"Detects the use of the 'Launch-VsDevShell.ps1' Microsoft signed script to execute commands.\";\nlet q12=_Im_ProcessCreate\n| where ((TargetProcessCommandLine contains \"verb:sync\" and TargetProcessCommandLine contains \"-source:RunCommand\" and TargetProcessCommandLine contains \"-dest:runCommand\") and TargetProcessName endswith \"\\\\msdeploy.exe\")|extend RuleId=\"646bc99f-6682-4b47-a73a-17b1b64c9d34\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_msdeploy.yml\"|extend RuleTitle=\"Execute Files with Msdeploy.exe\"|extend RuleDescription=\"Detects file execution using the msdeploy.exe lolbin\";\nlet q13=_Im_ProcessCreate\n| where ((TargetProcessName endswith \"\\\\MSOHTMED.exe\" or TargetProcessFilename =~ \"MsoHtmEd.exe\") and (TargetProcessCommandLine contains \"http://\" or TargetProcessCommandLine contains \"https://\" or TargetProcessCommandLine contains \"ftp://\"))|extend RuleId=\"459f2f98-397b-4a4a-9f47-6a5ec2f1c69d\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_msohtmed_download.yml\"|extend RuleTitle=\"Download Arbitrary Files Via MSOHTMED.EXE\"|extend RuleDescription=\"Detects usage of \\\"MSOHTMED\\\" to download arbitrary files\";\nlet q14=_Im_ProcessCreate\n| where ((TargetProcessName endswith \"\\\\MSPUB.exe\" or TargetProcessFilename =~ \"MSPUB.exe\") and (TargetProcessCommandLine contains \"http://\" or TargetProcessCommandLine contains \"https://\" or TargetProcessCommandLine contains \"ftp://\"))|extend RuleId=\"3b3c7f55-f771-4dd6-8a6e-08d057a17caf\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_mspub_download.yml\"|extend RuleTitle=\"Arbitrary File Download Via MSPUB.EXE\"|extend RuleDescription=\"Detects usage of \\\"MSPUB\\\" (Microsoft Publisher) to download arbitrary files\";\nlet q15=_Im_ProcessCreate\n| where ((TargetProcessFilename =~ \"OpenConsole.exe\" or TargetProcessName endswith \"\\\\OpenConsole.exe\") and (not(TargetProcessName startswith \"C:\\\\Program Files\\\\WindowsApps\\\\Microsoft.WindowsTerminal\")))|extend RuleId=\"814c95cc-8192-4378-a70a-f1aafd877af1\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_openconsole.yml\"|extend RuleTitle=\"Use of OpenConsole\"|extend RuleDescription=\"Detects usage of OpenConsole binary as a LOLBIN to launch other binaries to bypass application Whitelisting\";\nlet q16=_Im_ProcessCreate\n| where (TargetProcessName endswith \"\\\\pcalua.exe\" and TargetProcessCommandLine contains \" -a\")|extend RuleId=\"0955e4e1-c281-4fb9-9ee1-5ee7b4b754d2\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_pcalua.yml\"|extend RuleTitle=\"Use of Pcalua For Execution\"|extend RuleDescription=\"Detects execition of commands and binaries from the context of The program compatibility assistant (Pcalua.exe). This can be used as a LOLBIN in order to bypass application whitelisting.\";\nlet q17=_Im_ProcessCreate\n| where ((TargetProcessName endswith \"\\\\rundll32.exe\" or TargetProcessFilename =~ \"RUNDLL32.EXE\") and (TargetProcessCommandLine contains \"pcwutl\" and TargetProcessCommandLine contains \"LaunchApplication\"))|extend RuleId=\"9386d78a-7207-4048-9c9f-a93a7c2d1c05\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_pcwutl.yml\"|extend RuleTitle=\"Code Execution via Pcwutl.dll\"|extend RuleDescription=\"Detects launch of executable by calling the LaunchApplication function from pcwutl.dll library.\";\nlet q18=_Im_ProcessCreate\n| where (((ActingProcessName endswith \"\\\\powershell.exe\" or ActingProcessName endswith \"\\\\pwsh.exe\") and ActingProcessCommandLine contains \"\\\\WindowsPowerShell\\\\Modules\\\\Pester\\\\\") and (ActingProcessCommandLine contains \"{ Invoke-Pester -EnableExit ;\" or ActingProcessCommandLine contains \"{ Get-Help \\\"\"))|extend RuleId=\"18988e1b-9087-4f8a-82fe-0414dce49878\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_pester.yml\"|extend RuleTitle=\"Execute Code with Pester.bat as Parent\"|extend RuleDescription=\"Detects code execution via Pester.bat (Pester - Powershell Modulte for testing)\";\nlet q19=_Im_ProcessCreate\n| where (((TargetProcessName endswith \"\\\\powershell.exe\" or TargetProcessName endswith \"\\\\pwsh.exe\") and (TargetProcessCommandLine contains \"Pester\" and TargetProcessCommandLine contains \"Get-Help\")) or ((TargetProcessName endswith \"\\\\cmd.exe\" and (TargetProcessCommandLine contains \"pester\" and TargetProcessCommandLine contains \";\")) and (TargetProcessCommandLine contains \"help\" or TargetProcessCommandLine contains \"**\")))|extend RuleId=\"59e938ff-0d6d-4dc3-b13f-36cc28734d4e\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_pester_1.yml\"|extend RuleTitle=\"Execute Code with Pester.bat\"|extend RuleDescription=\"Detects code execution via Pester.bat (Pester - Powershell Modulte for testing)\";\nlet q20=_Im_ProcessCreate\n| where (((TargetProcessName endswith \"\\\\presentationhost.exe\" or TargetProcessFilename =~ \"PresentationHost.exe\") and TargetProcessCommandLine contains \".xbap\") and (not((TargetProcessCommandLine contains \"C:\\\\Windows\\\\\" or TargetProcessCommandLine contains \"C:\\\\Program Files\"))))|extend RuleId=\"d22e2925-cfd8-463f-96f6-89cec9d9bc5f\"|extend SourceURL=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_lolbin_presentationhost.yml\"|extend RuleTitle=\"Application Whitelisting Bypass via PresentationHost.exe\"|extend RuleDescription=\"Detects usage of \\\"PresentationHost\\\" which is a utility that runs \\\".xbap\\\" (Browser Applications) files. It can be abused to run malicious \\\".xbap\\\" files any bypass AWL\";\nunion q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17, q18, q19, q20;",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "startTimeUtc": null,
                "tactics": ["DefenseEvasion", "CommandAndControl", "Execution", "CredentialAccess", "Discovery"],
                "techniques": ["T1127", "T1059", "T1615", "T1105", "T1564", "T1552", "T1218", "T1216", "T1202"],
                "alertRuleTemplateName": "5163A000-5160-5160-5160-5163A0000107",
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5M",
                        "matchingMethod": "AllEntities",
                        "groupByEntities": [],
                        "groupByAlertDetails": null,
                        "groupByCustomDetails": null
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "SingleAlert"
                },                
                "alertDetailsOverride": {
                    "alertDisplayNameFormat": "{{RuleTitle}} ",
                    "alertDescriptionFormat": "{{RuleDescription}} ",
                    "alertDynamicProperties": [
                        {
                            "alertProperty": "ExtendedLinks",
                            "value": "SourceURL"
                        },
                        {
                            "alertProperty": "ProductComponentName",
                            "value": "RuleId"
                        }
                    ]
                },
                "customDetails": null,
                "entityMappings": [
                    {
                        "entityType": "Account",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "ActorUsername"
                            }
                        ]
                    },
                    {
                        "entityType": "Host",
                        "fieldMappings": [
                            {
                                "identifier": "FullName",
                                "columnName": "Dvc"
                            }
                        ]
                    },
                    {
                        "entityType": "Process",
                        "fieldMappings": [
                            {
                                "identifier": "ProcessId",
                                "columnName": "TargetProcessId"
                            },
                            {
                                "identifier": "CommandLine",
                                "columnName": "TargetProcessCommandLine"
                            },
                            {
                                "identifier": "ElevationToken",
                                "columnName": "TargetProcessTokenElevation"
                            }
                        ]
                    },
                    {
                        "entityType": "FileHash",
                        "fieldMappings": [
                            {
                                "identifier": "Algorithm",
                                "columnName": "HashType"
                            },
                            {
                                "identifier": "Value",
                                "columnName": "Hash"
                            }
                        ]
                    },
                    {
                        "entityType": "File",
                        "fieldMappings": [
                            {
                                "identifier": "Directory",
                                "columnName": "TargetProcessCurrentDirectory"
                            },
                            {
                                "identifier": "Name",
                                "columnName": "TargetProcessName"
                            }
                        ]
                    },
                    {
                        "entityType": "Process",
                        "fieldMappings": [
                            {
                                "identifier": "ProcessId",
                                "columnName": "ActingProcessId"
                            },
                            {
                                "identifier": "CommandLine",
                                "columnName": "ActingProcessCommandLine"
                            }
                        ]
                    }
                ],
                "sentinelEntitiesMappings": null,
                "templateVersion": "1.0.0"
            }
        }
    ]
}